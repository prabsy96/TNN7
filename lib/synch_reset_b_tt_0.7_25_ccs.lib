library (synch_reset_b_tt_0.7_25) {
  /* Models written by Liberate 19.2.0.100 from Cadence Design Systems, Inc. on Sat Aug  1 22:15:16 EDT 2020 */
  comment : "";
  date : "$Date: Sat Aug  1 22:09:06 2020 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 0.7);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 0.32;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 0.7;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 10;
  slew_lower_threshold_pct_rise : 10;
  slew_upper_threshold_pct_fall : 90;
  slew_upper_threshold_pct_rise : 90;
  operating_conditions (tt_0.7_25) {
    process : 1;
    temperature : 25;
    voltage : 0.7;
  }
  default_operating_conditions : tt_0.7_25;
  define(related_spice_node, ccsn_first_stage, string);
  define(related_spice_node, ccsn_last_stage, string);
  define(load_cap_rise, ccsn_first_stage, float);
  define(load_cap_fall, ccsn_first_stage, float);
  output_current_template (ccs_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    variable_3 : time;
  }
  lu_table_template (ccsn_dc_template) {
    variable_1 : input_voltage;
    variable_2 : output_voltage;
  }
  lu_table_template (ccsn_prop_template) {
    variable_1 : input_noise_height;
    variable_2 : input_noise_width;
    variable_3 : total_output_net_capacitance;
    variable_4 : time;
  }
  lu_table_template (ccsn_vout_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    variable_3 : time;
  }
  pg_current_template (ccsp_template1) {
    variable_1 : input_net_transition;
    variable_2 : time;
  }
  pg_current_template (ccsp_template2) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    variable_3 : time;
  }
  lu_table_template (constraint_template_7x7) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
    index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
  }
  lu_table_template (delay_template_7x7_1) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
    index_2 ("0.00144, 0.00288, 0.00576, 0.01152, 0.02304, 0.04608, 0.09216");
  }
  lu_table_template (mpw_constraint_template_7x7) {
    variable_1 : constrained_pin_transition;
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
  }
  power_lut_template (passive_power_template_7x1_1) {
    variable_1 : input_transition_time;
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
  }
  power_lut_template (power_template_7x7_1) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
    index_2 ("0.00144, 0.00288, 0.00576, 0.01152, 0.02304, 0.04608, 0.09216");
  }
  lu_table_template (receiver_cap_power_template_7x7_1) {
    variable_1 : input_net_transition;
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
  }
  lu_table_template (waveform_template_name) {
    variable_1 : input_net_transition;
    variable_2 : normalized_voltage;
    index_1 ("0, 1, 2, 3, 4, 5, 6");
    index_2 ("0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16");
  }
  define(char_when, receiver_capacitance, string);
  define(is_propagating, receiver_capacitance, string);
  normalized_driver_waveform (waveform_template_name) {
    driver_waveform_name : "PreDriver20.5:rise";
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
    index_2 ("0, 0.03, 0.1, 0.158744, 0.221271, 0.279374, 0.333513, 0.3841, 0.437223, 0.533203, 0.58153, 0.626864, 0.717883, 0.806555, 0.9, 0.958983, 1");
    values ( \
      "0, 0.000375, 0.000625, 0.00084375, 0.00109375, 0.00134375, 0.00159375, 0.00184375, 0.002125, 0.0026875, 0.003, 0.0033125, 0.004, 0.00475, 0.005625, 0.00621875, 0.00665625", \
      "0, 0.00075, 0.00125, 0.0016875, 0.0021875, 0.0026875, 0.0031875, 0.0036875, 0.00425, 0.005375, 0.006, 0.006625, 0.008, 0.0095, 0.01125, 0.0124375, 0.0133125", \
      "0, 0.0015, 0.0025, 0.003375, 0.004375, 0.005375, 0.006375, 0.007375, 0.0085, 0.01075, 0.012, 0.01325, 0.016, 0.019, 0.0225, 0.024875, 0.026625", \
      "0, 0.003, 0.005, 0.00675, 0.00875, 0.01075, 0.01275, 0.01475, 0.017, 0.0215, 0.024, 0.0265, 0.032, 0.038, 0.045, 0.04975, 0.05325", \
      "0, 0.006, 0.01, 0.0135, 0.0175, 0.0215, 0.0255, 0.0295, 0.034, 0.043, 0.048, 0.053, 0.064, 0.076, 0.09, 0.0995, 0.1065", \
      "0, 0.012, 0.02, 0.027, 0.035, 0.043, 0.051, 0.059, 0.068, 0.086, 0.096, 0.106, 0.128, 0.152, 0.18, 0.199, 0.213", \
      "0, 0.024, 0.04, 0.054, 0.07, 0.086, 0.102, 0.118, 0.136, 0.172, 0.192, 0.212, 0.256, 0.304, 0.36, 0.398, 0.426" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    driver_waveform_name : "PreDriver20.5:fall";
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
    index_2 ("0, 0.03, 0.1, 0.158744, 0.221271, 0.279374, 0.333513, 0.3841, 0.437223, 0.533203, 0.58153, 0.626864, 0.717883, 0.806555, 0.9, 0.958983, 1");
    values ( \
      "0, 0.000375, 0.000625, 0.00084375, 0.00109375, 0.00134375, 0.00159375, 0.00184375, 0.002125, 0.0026875, 0.003, 0.0033125, 0.004, 0.00475, 0.005625, 0.00621875, 0.00665625", \
      "0, 0.00075, 0.00125, 0.0016875, 0.0021875, 0.0026875, 0.0031875, 0.0036875, 0.00425, 0.005375, 0.006, 0.006625, 0.008, 0.0095, 0.01125, 0.0124375, 0.0133125", \
      "0, 0.0015, 0.0025, 0.003375, 0.004375, 0.005375, 0.006375, 0.007375, 0.0085, 0.01075, 0.012, 0.01325, 0.016, 0.019, 0.0225, 0.024875, 0.026625", \
      "0, 0.003, 0.005, 0.00675, 0.00875, 0.01075, 0.01275, 0.01475, 0.017, 0.0215, 0.024, 0.0265, 0.032, 0.038, 0.045, 0.04975, 0.05325", \
      "0, 0.006, 0.01, 0.0135, 0.0175, 0.0215, 0.0255, 0.0295, 0.034, 0.043, 0.048, 0.053, 0.064, 0.076, 0.09, 0.0995, 0.1065", \
      "0, 0.012, 0.02, 0.027, 0.035, 0.043, 0.051, 0.059, 0.068, 0.086, 0.096, 0.106, 0.128, 0.152, 0.18, 0.199, 0.213", \
      "0, 0.024, 0.04, 0.054, 0.07, 0.086, 0.102, 0.118, 0.136, 0.172, 0.192, 0.212, 0.256, 0.304, 0.36, 0.398, 0.426" \
    );
  }
  normalized_driver_waveform (waveform_template_name) {
    index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
    index_2 ("0, 0.03, 0.1, 0.158744, 0.221271, 0.279374, 0.333513, 0.3841, 0.437223, 0.533203, 0.58153, 0.626864, 0.717883, 0.806555, 0.9, 0.958983, 1");
    values ( \
      "0, 0.000375, 0.000625, 0.00084375, 0.00109375, 0.00134375, 0.00159375, 0.00184375, 0.002125, 0.0026875, 0.003, 0.0033125, 0.004, 0.00475, 0.005625, 0.00621875, 0.00665625", \
      "0, 0.00075, 0.00125, 0.0016875, 0.0021875, 0.0026875, 0.0031875, 0.0036875, 0.00425, 0.005375, 0.006, 0.006625, 0.008, 0.0095, 0.01125, 0.0124375, 0.0133125", \
      "0, 0.0015, 0.0025, 0.003375, 0.004375, 0.005375, 0.006375, 0.007375, 0.0085, 0.01075, 0.012, 0.01325, 0.016, 0.019, 0.0225, 0.024875, 0.026625", \
      "0, 0.003, 0.005, 0.00675, 0.00875, 0.01075, 0.01275, 0.01475, 0.017, 0.0215, 0.024, 0.0265, 0.032, 0.038, 0.045, 0.04975, 0.05325", \
      "0, 0.006, 0.01, 0.0135, 0.0175, 0.0215, 0.0255, 0.0295, 0.034, 0.043, 0.048, 0.053, 0.064, 0.076, 0.09, 0.0995, 0.1065", \
      "0, 0.012, 0.02, 0.027, 0.035, 0.043, 0.051, 0.059, 0.068, 0.086, 0.096, 0.106, 0.128, 0.152, 0.18, 0.199, 0.213", \
      "0, 0.024, 0.04, 0.054, 0.07, 0.086, 0.102, 0.118, 0.136, 0.172, 0.192, 0.212, 0.256, 0.304, 0.36, 0.398, 0.426" \
    );
  }
  cell (synch_reset_b) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 0.245771;
      when : "(CLK * D * RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.264911;
      when : "(CLK * D * RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.275536;
      when : "(CLK * D * !RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.234979;
      when : "(CLK * D * !RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.27351;
      when : "(CLK * !D * RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.232953;
      when : "(CLK * !D * RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.257097;
      when : "(CLK * !D * !RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.21654;
      when : "(CLK * !D * !RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.301475;
      when : "(!CLK * D * RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.273047;
      when : "(!CLK * D * RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.274291;
      when : "(!CLK * D * !RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.304159;
      when : "(!CLK * D * !RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.272265;
      when : "(!CLK * !D * RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.302133;
      when : "(!CLK * !D * RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.255852;
      when : "(!CLK * !D * !RST_B * !Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.28572;
      when : "(!CLK * !D * !RST_B * Q)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0.26689;
      related_pg_pin : VDD;
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
    }
    pin (CLK) {
      driver_waveform_fall : "PreDriver20.5:fall";
      driver_waveform_rise : "PreDriver20.5:rise";
      clock : true;
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.32;
      capacitance : 0.000477153;
      rise_capacitance : 0.000477153;
      rise_capacitance_range (0.000477153, 0.000477153);
      fall_capacitance : 0.000477033;
      fall_capacitance_range (0.000477033, 0.000477033);
      timing () {
        related_pin : "CLK";
        timing_type : min_pulse_width;
        rise_constraint (mpw_constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "0.0379235, 0.0400448, 0.0400448, 0.0428009, 0.0805664, 0.161133, 0.321045" \
          );
        }
        fall_constraint (mpw_constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "0.0259399, 0.0259399, 0.0280762, 0.0402832, 0.0805664, 0.161133, 0.321045" \
          );
        }
      }
    }
    pin (D) {
      driver_waveform_fall : "PreDriver20.5:fall";
      driver_waveform_rise : "PreDriver20.5:rise";
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.32;
      capacitance : 0.00033592;
      rise_capacitance : 0.00033592;
      rise_capacitance_range (0.00033592, 0.00033592);
      fall_capacitance : 0.000327713;
      fall_capacitance_range (0.000327713, 0.000327713);
      timing () {
        related_pin : "CLK";
        sdf_cond : "adacond_RST_B";
        timing_type : hold_rising;
        when : "RST_B";
        rise_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "-0.000488281, 0.0011228, 0.00824208, 0.0114307, 0.0161674, 0.0259026, 0.0396652", \
            "-0.00157456, 3.65165e-05, 0.0031583, 0.00900039, 0.0150811, 0.0248163, 0.0385789", \
            "-0.00367769, -0.00206661, 0.00105518, 0.00689726, 0.012978, 0.0227132, 0.0364758", \
            "-0.00626221, -0.00599512, 0.00112416, 0.004375, 0.013047, 0.0187846, 0.0296875", \
            "-0.0103548, -0.00874368, -0.00562189, 0.000220196, 0.00630092, 0.0160361, 0.0258013", \
            "-0.0154055, -0.0137944, -0.0106726, -0.00483054, 0.00125019, 0.0109854, 0.0207505", \
            "-0.0237214, -0.0221104, -0.0189886, -0.0116563, -0.00306826, 0.0026694, 0.0164321" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "-0.0167984, -0.016162, -0.0149275, -0.0153052, -0.0125958, -0.00702946, -0.00174834", \
            "-0.018698, -0.0180616, -0.0168272, -0.0145122, -0.0144954, -0.00892908, -0.00364796", \
            "-0.0224044, -0.021768, -0.0205336, -0.0182186, -0.0182018, -0.0126355, -0.00735439", \
            "-0.0321387, -0.0288097, -0.0275752, -0.0278906, -0.0252435, -0.0196772, -0.0172461", \
            "-0.0420447, -0.0414082, -0.0401738, -0.0378589, -0.0338446, -0.0322757, -0.0269946", \
            "-0.0573052, -0.0566687, -0.0554343, -0.0531194, -0.0491051, -0.0475362, -0.0422551", \
            "-0.0800598, -0.0794234, -0.078189, -0.0746582, -0.0718597, -0.0702909, -0.0650098" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        sdf_cond : "adacond_RST_B";
        timing_type : setup_rising;
        when : "RST_B";
        rise_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "0.0129563, 0.0110259, 0.00728625, 0.0014209, -0.00376342, -0.0161109, -0.0257742", \
            "0.014185, 0.0122546, 0.00851498, 0.00551797, -0.00253469, -0.0148821, -0.0245455", \
            "0.0165634, 0.014633, 0.0108934, 0.00789643, -0.000156241, -0.0125037, -0.0221671", \
            "0.0224003, 0.019074, 0.0153344, 0.00953125, 0.000287177, -0.00806277, -0.0205859", \
            "0.0286222, 0.0266918, 0.0229522, 0.0159577, 0.00790506, -0.00444239, -0.0141058", \
            "0.0348047, 0.0328743, 0.0291347, 0.0221402, 0.0140875, 0.00174008, -0.00792328", \
            "0.0429364, 0.041006, 0.0372664, 0.0274121, 0.0222193, 0.0098718, -0.00378906" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "0.0297519, 0.0287662, 0.0228646, 0.0204541, 0.0173176, 0.0142043, 0.0113742", \
            "0.03175, 0.0307644, 0.0248627, 0.0253206, 0.0193157, 0.0162024, 0.0133723", \
            "0.0356498, 0.0346642, 0.0287625, 0.0292204, 0.0232155, 0.0201022, 0.0172721", \
            "0.0401953, 0.0380805, 0.0361764, 0.0338281, 0.0306294, 0.027516, 0.0218359", \
            "0.052351, 0.0513654, 0.0494612, 0.0459216, 0.0439142, 0.0368034, 0.0339733", \
            "0.0687516, 0.067766, 0.0658618, 0.0623222, 0.0563173, 0.053204, 0.0503739", \
            "0.0928566, 0.0878735, 0.0859694, 0.0844297, 0.0804224, 0.077309, 0.0704814" \
          );
        }
      }
    }
    pin (RST_B) {
      driver_waveform_fall : "PreDriver20.5:fall";
      driver_waveform_rise : "PreDriver20.5:rise";
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.32;
      capacitance : 0.000363889;
      rise_capacitance : 0.000363357;
      rise_capacitance_range (0.000363357, 0.000363357);
      fall_capacitance : 0.000363889;
      fall_capacitance_range (0.000363889, 0.000363889);
      timing () {
        related_pin : "CLK";
        sdf_cond : "adacond_D";
        timing_type : hold_rising;
        when : "D";
        rise_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "-0.000262102, 0.0013125, 0.0043655, 0.0114307, 0.0199897, 0.0256434, 0.0363065", \
            "-0.00179958, -0.000224973, 0.00282803, 0.0085492, 0.0184522, 0.0241059, 0.034769", \
            "-0.00477021, -0.0031956, -0.000142603, 0.00557857, 0.0154816, 0.0211353, 0.0317984", \
            "-0.0089502, -0.00472209, -0.00166909, 0.00135917, 0.00995759, 0.0196088, 0.0274121", \
            "-0.011678, -0.0101034, -0.00705044, -0.00532677, 0.00457624, 0.0142274, 0.0248906", \
            "-0.0184014, -0.0168268, -0.0137738, -0.0120502, -0.00214715, 0.00750405, 0.0181672", \
            "-0.0252136, -0.023639, -0.020586, -0.0176172, -0.0089593, -0.0033056, 0.011355" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "-0.016076, -0.015467, -0.0142859, -0.0147827, -0.0122259, -0.00689434, -0.0016458", \
            "-0.0176362, -0.0170272, -0.0158461, -0.0136308, -0.0137861, -0.00845455, -0.00320601", \
            "-0.0246875, -0.0200811, -0.0188999, -0.0166846, -0.0168399, -0.0115084, -0.00625984", \
            "-0.0289189, -0.0299198, -0.0287387, -0.0251563, -0.0226812, -0.0173497, -0.0149512", \
            "-0.0411459, -0.0365395, -0.0353583, -0.0331431, -0.0332983, -0.0279668, -0.0267158", \
            "-0.0541209, -0.0535119, -0.0523308, -0.0501155, -0.0462733, -0.0449393, -0.0396907", \
            "-0.0750161, -0.0744072, -0.0692285, -0.0697949, -0.0671685, -0.061837, -0.0605859" \
          );
        }
      }
      timing () {
        related_pin : "CLK";
        sdf_cond : "adacond_D";
        timing_type : setup_rising;
        when : "D";
        rise_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "0.0151225, 0.0134787, 0.0102873, 0.0014209, -0.00616818, -0.0169306, -0.0258279", \
            "0.0168469, 0.0152031, 0.0120117, 0.00601363, -0.0044438, -0.0152062, -0.0241036", \
            "0.0201769, 0.0185331, 0.0153417, 0.00934366, -0.00111377, -0.0118762, -0.024771", \
            "0.0234741, 0.0207207, 0.0175293, 0.0135312, 0.00507132, -0.00569107, -0.0165859", \
            "0.0288373, 0.0271935, 0.0240021, 0.0180041, 0.0115441, 0.000781739, -0.0121131", \
            "0.038972, 0.0373282, 0.0341368, 0.0281387, 0.0176813, 0.00691889, -0.00597598", \
            "0.0464577, 0.044814, 0.0416226, 0.0335665, 0.0251671, 0.0144047, 0.00150979" \
          );
        }
        fall_constraint (constraint_template_7x7) {
          index_1 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          index_2 ("0.005, 0.01, 0.02, 0.04, 0.08, 0.16, 0.32");
          values ( \
            "0.0275171, 0.0261585, 0.023541, 0.0198145, 0.0186232, 0.0136218, 0.00684448", \
            "0.0292483, 0.0278897, 0.0252722, 0.0244336, 0.0203544, 0.0153531, 0.00857573", \
            "0.0326295, 0.0312709, 0.0286533, 0.0278147, 0.0237355, 0.0187342, 0.0119569", \
            "0.0401953, 0.0377075, 0.03509, 0.0314453, 0.0301722, 0.0251709, 0.019541", \
            "0.0506373, 0.0492787, 0.0466612, 0.0418251, 0.0417434, 0.0367421, 0.0299647", \
            "0.0645733, 0.0632147, 0.0605972, 0.0557611, 0.0556794, 0.050678, 0.0439007", \
            "0.0875998, 0.0822437, 0.0796262, 0.075918, 0.0747084, 0.069707, 0.0669272" \
          );
        }
      }
    }
    ff (IQ,IQN) {
      clocked_on : "CLK";
      next_state : "(D * RST_B)";
      power_down_function : "(!VDD) + (VSS)";
    }
  }
}
